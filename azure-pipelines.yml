# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master
  - releases/rc

jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-16.04'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    steps:
      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '-Xmx1024m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: 'clean package'
#      - task: PublishBuildArtifacts@1
#        inputs:
#          pathtoPublish: '$(System.DefaultWorkingDirectory)'
#          artifactName: target

  - job: Deploy
    variables:
      - group: Deploy-keys
      - name: GPG_DIR
        value: $(Agent.TempDirectory)
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - bash: |
          echo $(ENCRYPTION_PASSWORD)
      - task: DownloadSecureFile@1
        inputs:
          secureFile: secring.gpg.enc
      - task: DecryptFile@1
        inputs:
          cipher: 'aes-256-cbc'
          inFile: $(GPG_DIR)/secring.gpg.enc
          passphrase: $(ENCRYPTION_PASSWORD)
          outFile: $(GPG_DIR)/secring.gpg
      - task: DownloadSecureFile@1
        inputs:
          secureFile: pubring.gpg.enc
      - task: DecryptFile@1
        inputs:
          cipher: 'aes-256-cbc'
          inFile: $(GPG_DIR)/pubring.gpg.enc
          passphrase: $(ENCRYPTION_PASSWORD)
          outFile: $(GPG_DIR)/pubring.gpg
      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '-Xmx1024m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: '-B deploy -Dmaven.test.skip=true -Dfindbugs.skip=true -DperformRelease=true --settings deployment/settings.xml'
#      - task: DownloadBuildArtifacts@0
#        displayName: 'Download Build Artifacts'
#        inputs:
#          pathtoPublish: '$(System.DefaultWorkingDirectory)'
#          artifactName: target
    dependsOn: Build
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/releases/rc')

